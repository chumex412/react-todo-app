{"version":3,"sources":["components/Todo.js","components/Form.js","components/AddButton.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","id","name","completed","deleteTask","toggleTaskCompleted","changeName","useState","isEditing","setEditing","newName","setNewName","editTemplate","className","onSubmit","e","preventDefault","htmlFor","type","onChange","target","value","onClick","xmlns","viewBox","d","fill","opacity","viewTemplate","defaultChecked","Form","addTask","setName","icon","add","remove","AddButton","showForm","setShowForm","changeIcon","FilterButton","isPressed","setFilter","btnColor","borderColor","style","FILTER_DATA","All","filter","Active","task","Completed","FILTER_NAME","Object","keys","App","tasks","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","method","headers","body","JSON","stringify","newTask","remainingTask","editName","updTask","editedName","map","taskToToggle","completedTask","taskList","filteredList","taskNoun","length","listHeader","toggleButton","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57a66ca1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nconst Todo = ({\r\n   id, \r\n   name, \r\n   completed, \r\n   deleteTask, \r\n   toggleTaskCompleted, \r\n   changeName \r\n}) => {\r\n\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    changeName(id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n\r\n  }\r\n\r\n  const editTemplate = (\r\n    <form className=\"stack-group stack-group--horizontal\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group form-group--vertical\">\r\n        <label className=\"h5\" htmlFor={id}>New name for {name}</label>\r\n        <input type=\"text\" className=\"input-text\" name={newName} id={id} onChange={ (e) => setNewName(e.target.value) } />\r\n      </div>\r\n\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn btn-todo btn-warning\" onClick={ () => setEditing(false) }>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".9\"/>\r\n            <path fill=\"#D1C12C\" d=\"M12 2a10 10 0 100 20 10 10 0 000-20zm0 18a8 8 0 110-16 8 8 0 010 16zm4-13l-4 4-4-4-1 1 4 4-4 4 1 1 4-4 4 4 1-1-4-4 4-4z\"/>\r\n          </svg>\r\n          <span className=\"visually-hidden\"> {name}</span>\r\n        </button>\r\n\r\n        <button type=\"submit\" className=\"btn btn-todo btn-success\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n            <path fill=\"#1DD640\" d=\"M9 16l-4-4-2 1 6 6L21 7l-1-1L9 16z\"/>\r\n          </svg>\r\n          <span className=\"visually-hidden\"> {name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-group stack-group--horizontal\">\r\n      <div className=\"form-group\">\r\n        <input type=\"checkbox\" name={name} id={id} defaultChecked={completed} onChange={ () => toggleTaskCompleted(id) } />\r\n        <label className=\"parag\" htmlFor={id}>\r\n          {name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn btn-todo btn-primary\" onClick={ () => setEditing(true) }> \r\n           <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n             <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n             <path fill=\"#5b78ff\" d=\"M14 9l1 1-9 9H5v-1l9-9m3.7-6a1 1 0 00-.7.3L15 5 19 9 20.7 7c.4-.3.4-1 0-1.4l-2.3-2.3a1 1 0 00-.7-.3zM14 6.2L3 17.2V21h3.8l11-11-3.7-3.8z\"/>\r\n           </svg>\r\n           <span className=\"visually-hidden\">{name}</span>\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-todo btn-danger\" onClick={ () => deleteTask(id) }>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n              <path fill=\"#F72130\" d=\"M16 9v10H8V9h8m-1.5-6h-5l-1 1H5v2h14V4h-3.5l-1-1zM18 7H6v12c0 1.1.9 2 2 2h8a2 2 0 002-2V7z\"/>\r\n            </svg>\r\n            <span className=\"visually-hidden\"> {name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <li className=\"todo-item\">\r\n      {isEditing ? editTemplate : viewTemplate}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Todo","import React, { useState } from \"react\";\r\n\r\n\r\nconst Form = ({addTask}) => {\r\n\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  return (\r\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n      <h2 className=\"todo-header h3\">\r\n        Decide what to do today\r\n      </h2>\r\n\r\n      <input\r\n        type=\"text\" \r\n        value={name} \r\n        name={name} id=\"\" \r\n        className=\"input\"\r\n        onChange={(e) => setName(e.target.value)} \r\n      />\r\n      <div>\r\n        <button className=\"btn\" type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form","import React from \"react\";\r\n\r\nconst icon = {\r\n  add: <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n         <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\r\n         <path fill=\"#ffffff\" d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>\r\n       </svg>,\r\n  remove: <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n            <path fill=\"#ffffff\" d=\"M19 13H5v-2h14v2z\"/>\r\n          </svg> \r\n};\r\n\r\nconst AddButton = ({ showForm, setShowForm }) => {\r\n\r\n  const changeIcon = showForm ? icon.remove : icon.add;\r\n\r\n  return (\r\n    <button className=\"btn btn-add\" onClick={ () => setShowForm(!showForm) }>\r\n       <span className=\"visually-hidden\">Show Form to </span>\r\n       {changeIcon}\r\n       <span className=\"visually-hidden\"> More task</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AddButton;","import React from \"react\";\r\n\r\n\r\nconst FilterButton = ({name, icon, isPressed, setFilter}) => {\r\n\r\n  const styleCond = name === \"All\" ? \"#5b78ff\" : name === \"Active\" ? \"#2b3975\" : \"#1DD640\";\r\n\r\n  const btnColor = {borderColor: styleCond}\r\n\r\n  return (\r\n    <button type=\"button\" style={btnColor} className=\"btn\" aria-pressed={isPressed} onClick={() => setFilter(name)}>\r\n      {icon}\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span className=\"visually-hidden\">{name}</span>\r\n      <span className=\"visually-hidden\"> Task</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;","import React, { useState, useEffect } from \"react\";\nimport Todo from \"./components/Todo\";\nimport Form from \"./components/Form\";\nimport AddButton from \"./components/AddButton\";\n//import {nanoid} from \"nanoid\";\n//import logo from './logo.svg';\nimport './App.css';\nimport FilterButton from \"./components/FilterButton\";\n\n// Declaring Filter datas\nconst FILTER_DATA = {\n  All: {\n    icon: <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n           <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n           <path fill=\"#5b78ff\" d=\"M21 3H3L1 5v14l2 2h18l2-2V5l-2-2zm0 16H3V5h18v14zm-11-7H8l4-4 4 4h-2v4h-4v-4z\"/>\n         </svg>,\n    filter: () => true\n  },\n  Active: {\n    icon: <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n           <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\n           <path fill=\"#2b3975\" d=\"M17 11l-4-4 1-1 3 2 4-4 1 1-5 6zm-6-4H2v2h9V7zm10 6l-1-1-3 3-3-3-1 1 3 3-3 3 1 1 3-3 3 3 1-1-3-3 3-3zm-10 2H2v2h9v-2z\"/>\n         </svg>,\n    filter: task => !task.completed,\n  },\n  Completed: {\n    icon: <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n           <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n           <path fill=\"#1DD640\" d=\"M18 7l-1-1-7 6 2 1 6-6zm4-1L12 16l-5-4-1 1 6 6L24 7l-2-1zM0 13l6 6 1-1-5-6-2 1z\"/>\n         </svg>,    \n    filter: task => task.completed \n  }\n}\n\n// Get object keys\nconst FILTER_NAME = Object.keys(FILTER_DATA);\n\nfunction App() {\n\n  // Declaring state\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n  const [showForm, setShowForm] = useState(false);\n\n  // Calling useEffect \n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n\n      setTasks(tasksFromServer);\n    }\n\n    getTasks();\n  }, []);\n\n  // Fetch task from server\n  const fetchTasks = async () => {\n    const res = await fetch(`http://localhost:5000/tasks`);\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  // Add task\n  const addTask = async (name) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\" \n      },\n      body: JSON.stringify({name: name, completed: false})\n    });\n\n    const newTask = await res.json();\n\n    setTasks([...tasks, newTask]);\n\n    //const newTask = {id: `id-${nanoid()}`, name: name, completed: false};\n    //setTasks([...tasks, newTask]);\n  }\n\n  // Delete task\n  const deleteTask = async (id) => {\n     await fetch(`http://localhost:5000/tasks/${id}`, {\n       method: \"DELETE\"\n     });\n\n    const remainingTask = tasks.filter(task => id !== task.id);\n    setTasks(remainingTask);\n  }\n\n  // Change name of todo item\n  const changeName = async (id, newName) => {\n\n    const editName = await fetchTask(id);\n    const updTask = {...editName, name: newName};\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n\n    const data = await res.json();\n\n    const editedName = tasks.map(task => (\n      id === task.id ? {...task, name: data.name} : task\n    ));\n    //const editedName = tasks.map(task => {\n    //  if(id === task.id) {\n    //    return { ...task, name: newName }\n    //  }\n\n    //  return task\n    //})\n\n    setTasks(editedName);\n  }\n\n  // Toggle task on or off when completed\n  const toggleTaskCompleted = async (id) => {\n    \n    const taskToToggle = await fetchTask(id);\n    const updTask = {...taskToToggle, completed: !taskToToggle.completed};\n\n    // Fetch task from api\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask)\n    });\n\n    // Parse json data\n    const data = await res.json();\n\n    const completedTask = tasks.map(task => (\n      id === task.id ? {...task, completed: data.completed} : task\n    ));\n\n    setTasks(completedTask);\n    \n    //const completedTask = tasks.map(task => {\n    //  if(id === task.id) {\n    //    return {...task, completed: !task.completed};\n    //  }\n    //  return task;\n    //})\n  }\n\n  // Loop through the given todo-item\n  const taskList = tasks.filter(FILTER_DATA[filter].filter).map(task => (\n    <Todo \n      id={task.id}\n      key={task.id}\n      name={task.name}\n      completed={task.completed}\n      deleteTask={deleteTask}\n      toggleTaskCompleted={toggleTaskCompleted}\n      changeName={changeName}\n    />\n  ));\n\n  // Filter element rendering\n  const filteredList = FILTER_NAME.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      icon={FILTER_DATA[name].icon}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  // Condition list-header rendering\n  const taskNoun = taskList.length === 1 ? \"task\" : \"tasks\";\n  const listHeader = taskList.length <= 0 ? \"No task available: Add new task\" : `${taskList.length} ${taskNoun} remaining`;\n\n  // Condition to show form\n  const toggleButton = showForm ? <Form addTask={addTask} /> : \"\";\n\n  return (\n    <div className=\"todo-app\">\n      <header className=\"header\">\n        <h1 className=\"h2\">Todo list</h1>\n        {toggleButton}\n      </header>\n      <div className=\"btn-filter-group\">\n        { filteredList }\n      </div>\n      <section className=\"todo-content\">\n        <h2 className=\"list-header h3\">{ listHeader }</h2>\n        <ul className=\"todo-list\">\n          {taskList}\n        </ul>\n      </section>\n\n      <AddButton showForm={showForm} setShowForm={setShowForm} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}